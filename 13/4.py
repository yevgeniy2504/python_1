# –í—Å–ø–æ–º–∏–Ω–∞–µ–º –∑–∞–¥–∞—á—É –∏–∑ —Å–µ–º–∏–Ω–∞—Ä–∞ 8 –ø—Ä–æ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö,
# –≥–¥–µ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –∏–º—è, –ª–∏—á–Ω—ã–π
# –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7) —Å–æ—Ö—Ä–∞–Ω—è—è
# –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª.
# üìå–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤
# —Å–≤–æ–π—Å—Ç–≤–∞—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå–û—Ç–¥–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
# –∏–∑ JSON —Ñ–∞–π–ª–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.


import os
import json
import csv
import pickle

path_ = "/home/yevgeniy/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/"


def dir_to_dump(dir_: str):
    with (
            open('new_user.json', 'a', encoding='utf-8') as f,
            open('new_user_2.csv', 'a', encoding='utf-8') as f_2,
            open('my_dict.pickle', 'ab') as f_3
    ):
        csv_write = csv.writer(f_2, dialect='excel', delimiter=' ', quotechar='|', quoting=csv.QUOTE_MINIMAL)
        for item_name in os.listdir(dir_):
            item_path = os.path.join(dir_, item_name)
            size = os.path.getsize(item_path)
            if os.path.isdir(item_path):
                dir_name = item_path.split('/')[-1]
                temp_dict = ['DIR', dir_name, size]
                json.dump(temp_dict, f)
                csv_write.writerow(temp_dict)
                pickle.dump(temp_dict, f_3)
                print(f"DIR: {dir_name}, size: {size}")
                dir_to_dump(item_path)


class User:
    def __init__(self, name, id, access_level):
        self.name = name
        self.id = id
        self.access_level = access_level


def read_users_from_json(file_path):
    users = set()
    with open(file_path, 'r', encoding='utf-8') as file:
        data = json.load(file)
        for user_data in data:
            name = user_data['name']
            id = user_data['id']
            access_level = user_data['access_level']
            user = User(name, id, access_level)
            users.add(user)
    return users


if __name__ == '__main__':
    file_path = 'users.json'
    users = read_users_from_json(file_path)
    for user in users:
        print(f"Name: {user.name}, ID: {user.id}, Access Level: {user.access_level}")
